//#include "titanone.gph"
#include "ColorLED.gph"
#include "ps4.gph"
/* *
* GPC SCRIPT
* 
*  GPC is a scripting language with C-like syntax.
*  To learn more access GPC Language Reference on Help menu.
* *********************************************************** */

//https://www.youtube.com/watch?v=VY47pN-8O5c

int LightWeaveTime = 70;
int DefaultTime = 100;
int CrystalFragTime = 700;
int BarSwap = 400;

//Booleans
bool ReadyForInput = TRUE;
bool RunProgram = FALSE;

//Variables
int MSElapsed = 0;

int SBoundlessStormTime = 23;
int SDaedricSummon = 12;
int SBeastTrap = 12;
int SElementalBlockaid = 14;
int SFamiliar = 10;
int SElementalWeapon = 5;
int SPotion = 46;

int BoundlessStormTimer = 23;
int DaedricSummonTimer = 12;
int BeastTrapTimer = 12;
int ElementalBlockaidTimer = 14;
int FamiliarTimer = 10;
int ElementalWeaponTimer = 5;
int PotionTimer = 35;


main {
    //vm_tctrl(-5); //This should run every 5 MS now
    
    if (event_active(PS4_RIGHT))
    {
        RunProgram = !RunProgram;
		if (RunProgram) ColorLED(CP,200,200,2,CP);  
            else ColorLED(CR,200,200,2,CR);
    }
    
    //Initiate the real time timer
    MSElapsed = MSElapsed + elapsed_time();
    if(MSElapsed >= 1000){
        MSElapsed = 0;
        BoundlessStormTimer = BoundlessStormTimer + 1;   
        DaedricSummonTimer = DaedricSummonTimer + 1;
        BeastTrapTimer = BeastTrapTimer + 1;
        ElementalBlockaidTimer = ElementalBlockaidTimer + 1;
        FamiliarTimer = FamiliarTimer + 1;
        ElementalWeaponTimer = ElementalWeaponTimer + 1;
        PotionTimer = PotionTimer + 1;
        if(RunProgram){
            if(DaedricSummonTimer >= SDaedricSummon && ReadyForInput) {		
                ReadyForInput = FALSE;
                combo_run(DaedricSummon);
            }
            if (BeastTrapTimer >= SBeastTrap && BoundlessStormTimer >= SBoundlessStormTime -2 && ReadyForInput){
                ReadyForInput = FALSE;
				combo_run(AllBackBar);                
            }
            if(BoundlessStormTimer >= SBoundlessStormTime && ReadyForInput){
                ReadyForInput = FALSE;
                combo_run(BoundlessStorm);
                }       
            if (BeastTrapTimer >= SBeastTrap && ReadyForInput){
                ReadyForInput = FALSE;
				combo_run(BeastTrap);                
            }
            if (FamiliarTimer >= SFamiliar && ReadyForInput){
                ReadyForInput = FALSE;
                combo_run(Familiar);
            }
            
            if (ElementalWeaponTimer >= SElementalWeapon && ReadyForInput){
                ReadyForInput = FALSE;
                combo_run(ElementalWeapon);
            }
            if(PotionTimer >= SPotion && ReadyForInput)
            {
                combo_run(Potion);
            }
            
            if(ReadyForInput)
            {
                ReadyForInput = FALSE;
                combo_run(CrystalFrags);
            }
        }
    }
}

combo BoundlessStorm {
    set_val (PS4_LEFT, 100); wait(100);
    set_val (PS4_LEFT, 0); wait(BarSwap);
    set_val(PS4_R2, 100);    wait(100);
    set_val(PS4_R2, 0);      wait(LightWeaveTime);
    set_val(PS4_TRIANGLE, 100);    wait(100);
    set_val(PS4_TRIANGLE, 0);      wait(DefaultTime);
    BoundlessStormTimer = 0;
    ReadyForInput = TRUE;
    set_val (PS4_LEFT, 100); wait(100);
    set_val (PS4_LEFT, 0); wait(BarSwap);
}

combo DaedricSummon {
    set_val(PS4_R2, 100);    wait(100);
    set_val(PS4_R2, 0);      wait(LightWeaveTime);
    set_val(PS4_TRIANGLE, 100);    wait(100);
    set_val(PS4_TRIANGLE, 0);      wait(DefaultTime);
    DaedricSummonTimer = 0;		
	printf("starting combo cLoop, loops left: %d",ReadyForInput);
    ReadyForInput = TRUE;
}

combo Familiar {
    set_val(PS4_R2, 100);    wait(100);
    set_val(PS4_R2, 0);      wait(LightWeaveTime);
    set_val(PS4_L1, 100);    wait(100);
    set_val(PS4_L1, 0);      wait(DefaultTime);
    FamiliarTimer = 0;
    ReadyForInput = TRUE;
}

combo ElementalWeapon {
    set_val(PS4_R2, 100);    wait(100);
    set_val(PS4_R2, 0);      wait(LightWeaveTime);
    set_val(PS4_CIRCLE, 100);    wait(100);
    set_val(PS4_CIRCLE, 0);      wait(DefaultTime);
    ElementalWeaponTimer = 0;
    ReadyForInput = TRUE;
}

combo BeastTrap {
    set_val (PS4_LEFT, 100); wait(100);
    set_val (PS4_LEFT, 0); wait(BarSwap);
    set_val(PS4_R2, 100);    wait(100);
    set_val(PS4_R2, 0);      wait(LightWeaveTime);
    set_val(PS4_SQUARE, 100);    wait(100);
    set_val(PS4_SQUARE, 0);      wait(150);    
    set_val(PS4_R1,100);  set_val(PS4_L1,100);     wait(40); 
    set_val(PS4_R1, 0);   set_val(PS4_L1, 0);       wait(350);  // ultimate
    //Elemental Blockaid
    set_val(PS4_R2, 100);    wait(100);
    set_val(PS4_R2, 0);      wait(LightWeaveTime);
    set_val(PS4_CIRCLE, 100);    wait(100);
    set_val(PS4_CIRCLE, 0);      wait(300);
    BeastTrapTimer = 0;
    ReadyForInput = TRUE;
    set_val (PS4_LEFT, 100); wait(100);
    set_val (PS4_LEFT, 0); wait(BarSwap);
}

combo AllBackBar {
set_val (PS4_LEFT, 100); wait(100);
    set_val (PS4_LEFT, 0); wait(BarSwap);
    set_val(PS4_R2, 100);    wait(100);
    set_val(PS4_R2, 0);      wait(LightWeaveTime);
    set_val(PS4_SQUARE, 100);    wait(100);
    set_val(PS4_SQUARE, 0);      wait(150);    
    set_val(PS4_R1,100);  set_val(PS4_L1,100);     wait(40); 
    set_val(PS4_R1, 0);   set_val(PS4_L1, 0);       wait(350);  // ultimate
    //Elemental Blockaid
    set_val(PS4_R2, 100);    wait(100);
    set_val(PS4_R2, 0);      wait(LightWeaveTime);
    set_val(PS4_CIRCLE, 100);    wait(100);
    set_val(PS4_CIRCLE, 0);      wait(500);
    BeastTrapTimer = 0;
    //Boundless Storm
    set_val(PS4_R2, 100);    wait(100);
    set_val(PS4_R2, 0);      wait(LightWeaveTime);
    set_val(PS4_TRIANGLE, 100);    wait(100);
    set_val(PS4_TRIANGLE, 0);      wait(500);
    BoundlessStormTimer = 0;
    ReadyForInput = TRUE;
    set_val (PS4_LEFT, 100); wait(100);
    set_val (PS4_LEFT, 0); wait(BarSwap);
}

combo ElementalBlockaid {
    set_val (PS4_LEFT, 100); wait(100);
    set_val (PS4_LEFT, 0); wait(BarSwap);
    set_val(PS4_R2, 100);    wait(100);
    set_val(PS4_R2, 0);      wait(LightWeaveTime);
    set_val(PS4_CIRCLE, 100);    wait(100);
    set_val(PS4_CIRCLE, 0);      wait(300);
    ElementalBlockaidTimer = 0;
    set_val (PS4_LEFT, 100); wait(100);
    set_val (PS4_LEFT, 0); wait(BarSwap);
    ReadyForInput = TRUE;
}

combo Potion {
    set_val(PS4_UP, 100);    wait(100);
    set_val(PS4_UP, 0);      wait(20);
}

combo CrystalFrags {
    set_val(PS4_R2, 100);    wait(100);
    set_val(PS4_R2, 0);      wait(LightWeaveTime);
    set_val(PS4_SQUARE, 100);    wait(100);
    set_val(PS4_SQUARE, 0);      wait(CrystalFragTime);    
    set_val(PS4_R1,100);  set_val(PS4_L1,100);     wait(40); 
    set_val(PS4_R1, 0);   set_val(PS4_L1, 0);       wait(350);  // ultimate
    ReadyForInput = TRUE;
}